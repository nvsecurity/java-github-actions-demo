stages:
  - test
  - convert_sarif_to_gitlab

variables:
  NIGHTVISION_TARGET: javaspringvulny-api-gitlab
  NIGHTVISION_APP: javaspringvulny-api-gitlab
  NIGHTVISION_AUTH: javaspringvulny-api-gitlab
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2
  # activate container-to-container networking
  FF_NETWORK_PER_BUILD: "true"

services:
  - docker:dind

test:
  stage: test
  image: ubuntu:latest
  services:
    - docker:dind
  before_script:
    - apt-get update && apt-get install -y wget python3-venv python3-docker python3-pip python3 docker-compose curl gcc musl-dev libffi-dev
    - python3 -m venv venv
    - source venv/bin/activate
    - pip3 install requests urllib3 semgrep
    - wget -c https://downloads.nightvision.net/binaries/latest/nightvision_latest_linux_amd64.tar.gz -O - | tar -xz
    - mv nightvision /usr/local/bin/
  script:
    # "Extract API documentation from code"
    - nightvision swagger extract ./ --lang spring -t ${NIGHTVISION_APP} || true
    - if [ ! -e openapi-spec.yml ]; then cp backup-openapi-spec.yml openapi-spec.yml; fi
    # "Starting the app"
    - docker compose up -d
    - sleep 15
    # "Scanning the API"
    - nightvision scan ${NIGHTVISION_TARGET} -a ${NIGHTVISION_APP} --auth ${NIGHTVISION_AUTH} > scan-results.txt
    - nightvision export sarif -s "$(head -n 1 scan-results.txt)" --swagger-file openapi-spec.yml
  artifacts:
    paths:
      - openapi-spec.yml
      - results.sarif
    expire_in: 30 days

convert_sarif_to_gitlab:
  stage: convert_sarif_to_gitlab
  image: python:3.9 
  script:
    - python3 convert_sarif_to_gitlab.py
  artifacts:
    reports:
      sast: gitlab_security_report.json
  dependencies:
    - test
